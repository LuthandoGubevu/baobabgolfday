rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an authenticated admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email in ["roslyn@baobabbrands.com", "royden@baobabbrands.com", "ross@baobabbrands.com"];
    }

    // Bookings Collection
    match /bookings/{bookingId} {
      // ANYONE can create a booking.
      allow create: if true;
      // ONLY ADMINS can read, update, or delete bookings.
      allow read, update, delete: if isAdmin();
    }
    
    // Holes Collection
    match /holes/{holeId} {
      // ANYONE can read the hole status.
      allow get: if true;
      // ONLY ADMINS can list all holes (for the admin dashboard).
      allow list: if isAdmin();
      // Allow a user to update a hole IF it is part of a transaction to create a booking.
      // Or if the user is an admin.
      allow update: if (get(/databases/$(database)/documents/bookings/$(request.resource.data.bookingId)).data.companyName == request.resource.data.companyName) || isAdmin();
      // ONLY ADMINS can create or delete holes.
      allow create, delete: if isAdmin();
    }

    // Messages Collection
    match /messages/{messageId} {
      // ANYONE can create a message.
      allow create: if true;
      // ONLY ADMINS can read or delete messages.
      allow read, delete: if isAdmin();
      // No updates allowed.
      allow update: if false;
    }

    // Reminders Collection
    match /reminders/{reminderId} {
        // ANYONE can sign up for a reminder.
        allow create: if true;
        // ONLY ADMINS can read or delete reminders.
        allow read, delete: if isAdmin();
        // No updates allowed.
        allow update: if false;
    }
  }
}

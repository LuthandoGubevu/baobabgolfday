
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin credentials.
    function isAdmin() {
      return request.auth != null && request.auth.token.email in ["roslyn@baobabbrands.com", "royden@baobabbrands.com", "ross@baobabbrands.com"];
    }
    
    // General read access for auxiliary collections if needed, but default to locked down.
    match /{document=**} {
      allow read, write: if false;
    }

    // Bookings: Allow anyone to create, but only admins can read/delete.
    match /bookings/{bookingId} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }

    // Holes: Allow anyone to read status. Writes are complex.
    match /holes/{holeId} {
      allow read: if true;
      // Allow updates only by admins OR as part of a legitimate booking transaction by anyone.
      // The transaction check ensures a user can't just claim a hole without creating a booking.
      allow write: if isAdmin() || (getAfter(/databases/$(database)/documents/bookings/$(request.resource.data.bookingId)).data.sponsoredHoleNumber == holeId);
    }
    
    // Messages: Allow anyone to create, only admins can manage.
    match /messages/{messageId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    
    // Reminders: Allow anyone to sign up, only admins can manage.
    match /reminders/{reminderId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
  }
}
